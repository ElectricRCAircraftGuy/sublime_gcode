%YAML 1.2
---
# This repo: https://github.com/ElectricRCAircraftGuy/sublime_gcode
# Sublime Text syntax highlighting documentation: http://www.sublimetext.com/docs/syntax.html
name: gcode
# File extensions references:
# 1. https://www.mekanika.io/blog/learn-1/our-guide-to-familiarize-yourself-with-cnc-file-formats-20
#    - under the section "Machining Files (G-Code files)", contains:
#    .nc, .cnc, .ngc, .gcode, .tap
# 1. https://en.wikipedia.org/wiki/G-code - in box at top-right of article, under "extensions":
#    .gcode, .mpt, .mpf, .nc
# 1. https://forums.autodesk.com/t5/powerinspect-forum/trying-to-create-probe-path-g-code-eia-file-for-mazak-vcu500-5ax/td-p/7760654
#    .eia
file_extensions:
  - cnc
  - eia
  - gcode
  - mpf
  - mpt
  - nc
  - ngc
  - prg
  - tap
scope: source.gcode
contexts:
  main:
    - comment: inline comments
      match: \(.*\)
      scope: comment.inline.gcode
    - comment: line comments
      match: ;.*$
      scope: comment.line.gcode
    - comment: g commands
      match: G\d+
      scope: support.function.gcode
    - comment: m commands
      match: M\d+
      scope: support.constant
    - comment: flow control operators
      match: (IF|THEN|AND|OR|WHILE|GOTO)
      scope: keyword.control
    - comment: functions
      match: (ABS|ACOS|ASIN|ATAN|COS|LN|EXP|FIX|FUP|MOD|ROUND|SQRT|SIN|TAN)
      scope: support.function
    - comment: comparison operators
      match: (GT|LT|GE|LE|EQ)
      scope: keyword.operator
    - comment: flow control locations
      match: (?<=GOTO|DO)\d+
      scope: markup.italic
    - comment: variables
      match: (#\d+)
      scope: variable.other
    - comment: positions
      match: '([XYZABC]{1})(?=([\d\.-])*)'
      scope: markup.bold
    - comment: arc positions
      match: '([IJK])(?=([\d\.-])*)'
      scope: markup.italic
    - comment: positions
      match: '(?<=[XYZABC])([\d\.-])*'
      scope: constant.numeric
    - comment: feeds & speeds
      match: '(?<= )[FS]([\d\.-])+'
      scope: variable.parameter
    - comment: O & N numberes
      match: '([ON]([\d\.-])+)'
      scope: support.function
    - comment: brackets
      match: '(\[|\])'
      scope: string.interpolated
